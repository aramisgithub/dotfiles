#!/usr/bin/env bash
#
# optpdf file.pdf
#   This script will attempt to optimize the given pdf
#
file=$1
filebase=$(basename $file .pdf)
optfile=$(mktemp ${filebase}_opt.pdf.XXXX)
optfilefixed=$(mktemp ${filebase}_opt.pdf.XXXX)
metadata=$(mktemp ${filebase}_metadata.XXXX)
function finish {
  rm -rf "$optfile" "$optfilefixed" "$metadata"
}
trap finish EXIT

# Work around ghostscript not preserving PDF metadata
pdftk "$file" dump_data_utf8 > "$metadata"
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH -dProcessDSCComments=false \
  -sOutputFile=${optfile} ${file}
if [ $? == '0' ]; then
  optsize=$(stat -f "%z" ${optfile})
  orgsize=$(stat -f "%z" ${file})
  if [ "${optsize}" -eq 0 ]; then
    echo "No output!  Keeping original"
    exit;
  fi
  # restore metadata
  pdftk "$optfile" update_info_utf8 "$metadata" output "$optfilefixed"
  optsize=$(stat -f "%z" ${optfilefixed})
  if [ ${optsize} -ge ${orgsize} ]; then
    echo "Didn't make it smaller! Keeping original"
    exit;
  fi
  bytesSaved=$(expr $orgsize - $optsize)
  percent=$(expr $optsize '*' 100 / $orgsize)
  echo Saving $bytesSaved bytes \(now ${percent}% of old\)
  mv ${optfilefixed} ${file}
fi

